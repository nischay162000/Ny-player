name: Build NY Player Android APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  main_project_module: app

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'none'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Accept Android SDK licenses
      run: yes | sdkmanager --licenses
      
    - name: Install Android SDK components
      run: |
        sdkmanager "platforms;android-34"
        sdkmanager "build-tools;34.0.0"
        sdkmanager "platform-tools"
        
    - name: Generate project structure
      run: |
        mkdir -p app/src/main/java/com/nyplayer/{ui,data,utils}
        mkdir -p app/src/main/res/{layout,values,mipmap-anydpi-v26,drawable,xml,menu,color}
        mkdir -p gradle/wrapper
        
    - name: Create gradle wrapper
      run: |
        cat > gradle/wrapper/gradle-wrapper.properties << 'EOF'
        distributionBase=GRADLE_USER_HOME
        distributionPath=wrapper/dists
        distributionUrl=https\://services.gradle.org/distributions/gradle-8.4-bin.zip
        networkTimeout=10000
        validateDistributionUrl=true
        zipStoreBase=GRADLE_USER_HOME
        zipStorePath=wrapper/dists
        EOF
        
    - name: Create settings.gradle
      run: |
        cat > settings.gradle << 'EOF'
        pluginManagement {
            repositories {
                google()
                mavenCentral()
                gradlePluginPortal()
            }
        }
        dependencyResolutionManagement {
            repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
            repositories {
                google()
                mavenCentral()
            }
        }
        rootProject.name = "NY Player"
        include ':app'
        EOF
        
    - name: Create root build.gradle
      run: |
        cat > build.gradle << 'EOF'
        plugins {
            id 'com.android.application' version '8.2.0' apply false
            id 'org.jetbrains.kotlin.android' version '1.9.10' apply false
        }
        EOF
        
    - name: Create gradle.properties
      run: |
        cat > gradle.properties << 'EOF'
        org.gradle.jvmargs=-Xmx2048m -Dfile.encoding=UTF-8
        android.useAndroidX=true
        android.enableJetifier=true
        kotlin.code.style=official
        android.nonTransitiveRClass=true
        EOF
        
    - name: Create app build.gradle
      run: |
        cat > app/build.gradle << 'EOF'
        plugins {
            id 'com.android.application'
            id 'org.jetbrains.kotlin.android'
            id 'kotlin-parcelize'
        }

        android {
            namespace 'com.nyplayer'
            compileSdk 34

            defaultConfig {
                applicationId "com.nyplayer"
                minSdk 21
                targetSdk 34
                versionCode 1
                versionName "1.0"
                
                testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
            }

            buildTypes {
                release {
                    minifyEnabled true
                    proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
                    signingConfig signingConfigs.debug
                }
            }
            
            buildFeatures {
                viewBinding true
                dataBinding true
            }
            
            compileOptions {
                sourceCompatibility JavaVersion.VERSION_1_8
                targetCompatibility JavaVersion.VERSION_1_8
            }
            
            kotlinOptions {
                jvmTarget = '1.8'
            }
        }

        dependencies {
            implementation 'androidx.core:core-ktx:1.12.0'
            implementation 'androidx.appcompat:appcompat:1.6.1'
            implementation 'com.google.android.material:material:1.11.0'
            implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
            implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.7.0'
            implementation 'androidx.activity:activity-ktx:1.8.2'
            implementation 'androidx.recyclerview:recyclerview:1.3.2'
            implementation 'androidx.documentfile:documentfile:1.0.1'
            implementation 'androidx.fragment:fragment-ktx:1.6.2'
            implementation 'androidx.navigation:navigation-fragment-ktx:2.7.6'
            implementation 'androidx.navigation:navigation-ui-ktx:2.7.6'
            implementation 'androidx.viewpager2:viewpager2:1.0.0'
            implementation 'androidx.room:room-runtime:2.6.1'
            implementation 'androidx.room:room-ktx:2.6.1'
            implementation 'androidx.coordinatorlayout:coordinatorlayout:1.2.0'
            
            // ExoPlayer - Complete suite
            implementation 'com.google.android.exoplayer:exoplayer:2.19.1'
            implementation 'com.google.android.exoplayer:exoplayer-core:2.19.1'
            implementation 'com.google.android.exoplayer:exoplayer-ui:2.19.1'
            implementation 'com.google.android.exoplayer:exoplayer-dash:2.19.1'
            implementation 'com.google.android.exoplayer:exoplayer-hls:2.19.1'
            implementation 'com.google.android.exoplayer:exoplayer-smoothstreaming:2.19.1'
            implementation 'com.google.android.exoplayer:exoplayer-rtsp:2.19.1'
            implementation 'com.google.android.exoplayer:extension-okhttp:2.19.1'
            implementation 'com.google.android.exoplayer:extension-cronet:2.19.1'
            
            // Network & JSON
            implementation 'com.squareup.okhttp3:okhttp:4.12.0'
            implementation 'com.google.code.gson:gson:2.10.1'
            
            // UI Components
            implementation 'com.github.bumptech.glide:glide:4.16.0'
            implementation 'com.airbnb.android:lottie:6.3.0'
            
            testImplementation 'junit:junit:4.13.2'
            androidTestImplementation 'androidx.test.ext:junit:1.1.5'
            androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
        }
        EOF
        
    - name: Create AndroidManifest.xml
      run: |
        cat > app/src/main/AndroidManifest.xml << 'EOF'
        <?xml version="1.0" encoding="utf-8"?>
        <manifest xmlns:android="http://schemas.android.com/apk/res/android"
            xmlns:tools="http://schemas.android.com/tools">

            <uses-permission android:name="android.permission.INTERNET" />
            <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
            <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
            <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
            <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
            <uses-permission android:name="android.permission.MANAGE_EXTERNAL_STORAGE" tools:ignore="ScopedStorage" />
            <uses-permission android:name="android.permission.WAKE_LOCK" />
            <uses-permission android:name="android.permission.FOREGROUND_SERVICE" />

            <application
                android:name=".NYPlayerApplication"
                android:allowBackup="true"
                android:dataExtractionRules="@xml/data_extraction_rules"
                android:fullBackupContent="@xml/backup_rules"
                android:icon="@mipmap/ic_launcher"
                android:label="@string/app_name"
                android:theme="@style/Theme.NYPlayer"
                android:usesCleartextTraffic="true"
                android:hardwareAccelerated="true"
                android:networkSecurityConfig="@xml/network_security_config"
                android:requestLegacyExternalStorage="true"
                tools:targetApi="31">
                
                <activity
                    android:name=".MainActivity"
                    android:exported="true"
                    android:configChanges="orientation|keyboardHidden|screenSize|smallestScreenSize|screenLayout|uiMode"
                    android:launchMode="singleTask"
                    android:screenOrientation="unspecified"
                    android:theme="@style/Theme.NYPlayer.NoActionBar">
                    
                    <intent-filter android:priority="1000">
                        <action android:name="android.intent.action.MAIN" />
                        <category android:name="android.intent.category.LAUNCHER" />
                    </intent-filter>
                </activity>
                
                <activity
                    android:name=".ui.PlayerActivity"
                    android:exported="false"
                    android:configChanges="orientation|keyboardHidden|screenSize|smallestScreenSize|screenLayout|uiMode"
                    android:screenOrientation="unspecified"
                    android:theme="@style/Theme.NYPlayer.Player" />
                    
            </application>
        </manifest>
        EOF
        
    - name: Create resources
      run: |
        # Create strings.xml
        cat > app/src/main/res/values/strings.xml << 'EOF'
        <resources>
            <string name="app_name">NY Player</string>
            <string name="network_stream_player">Network Stream (Video) Player</string>
            <string name="media_stream_url">Media Stream URL</string>
            <string name="cookie_value">Cookie Value</string>
            <string name="referer_value">Referer Value</string>
            <string name="origin_value">Origin Value</string>
            <string name="drm_license_url">DRM License URL</string>
            <string name="user_agent">UserAgent</string>
            <string name="drm_scheme">DrmScheme</string>
            <string name="play_stream">▶ PLAY STREAM</string>
            <string name="loading">Loading...</string>
            <string name="buffering">Buffering...</string>
            <string name="connecting">Connecting...</string>
            <string name="error_invalid_url">Please enter a valid URL</string>
            <string name="error_load_failed">Failed to load media</string>
            <string name="error_network">Network error occurred</string>
            <string name="permission_storage">Storage permissions are required for local files</string>
            <string name="clear_all">Clear All</string>
            <string name="paste_url">Paste URL</string>
            <string name="test_url">Test URL</string>
            <string name="browse_files">Browse Files</string>
            <string name="add_current">Add Current</string>
            <string name="auto_play">Auto Play</string>
            <string name="hardware_acceleration">Hardware Acceleration</string>
            <string name="background_playback">Background Playback</string>
            <string name="about">About</string>
        </resources>
        EOF
        
        # Create colors.xml
        cat > app/src/main/res/values/colors.xml << 'EOF'
        <?xml version="1.0" encoding="utf-8"?>
        <resources>
            <color name="primary_dark">#1976D2</color>
            <color name="primary_light">#42A5F5</color>
            <color name="accent_color">#FF4081</color>
            <color name="background_dark">#121212</color>
            <color name="surface_dark">#1E1E1E</color>
            <color name="input_background">#2E2E2E</color>
            <color name="hint_text">#B0BEC5</color>
            <color name="ic_launcher_background">#1976D2</color>
        </resources>
        EOF
        
        # Create color selector
        cat > app/src/main/res/color/bottom_nav_selector.xml << 'EOF'
        <?xml version="1.0" encoding="utf-8"?>
        <selector xmlns:android="http://schemas.android.com/apk/res/android">
            <item android:color="@color/primary_light" android:state_checked="true" />
            <item android:color="#80FFFFFF" />
        </selector>
        EOF
        
        # Create styles.xml
        cat > app/src/main/res/values/styles.xml << 'EOF'
        <?xml version="1.0" encoding="utf-8"?>
        <resources>
            <style name="Theme.NYPlayer" parent="Theme.MaterialComponents.DayNight">
                <item name="colorPrimary">@color/primary_dark</item>
                <item name="colorPrimaryVariant">@color/primary_dark</item>
                <item name="colorOnPrimary">@android:color/white</item>
                <item name="colorSecondary">@color/accent_color</item>
                <item name="colorSecondaryVariant">@color/accent_color</item>
                <item name="colorOnSecondary">@android:color/white</item>
                <item name="android:colorBackground">@color/background_dark</item>
                <item name="colorSurface">@color/surface_dark</item>
                <item name="colorOnBackground">@android:color/white</item>
                <item name="colorOnSurface">@android:color/white</item>
            </style>
            
            <style name="Theme.NYPlayer.NoActionBar">
                <item name="windowActionBar">false</item>
                <item name="windowNoTitle">true</item>
            </style>
            
            <style name="Theme.NYPlayer.Player" parent="Theme.NYPlayer.NoActionBar">
                <item name="android:windowFullscreen">true</item>
                <item name="android:windowContentOverlay">@null</item>
                <item name="android:windowBackground">@android:color/black</item>
            </style>
        </resources>
        EOF
        
    - name: Create drawable resources
      run: |
        # Create simple vector drawables for menu icons
        cat > app/src/main/res/drawable/ic_home.xml << 'EOF'
        <vector xmlns:android="http://schemas.android.com/apk/res/android"
            android:width="24dp"
            android:height="24dp"
            android:viewportWidth="24"
            android:viewportHeight="24"
            android:tint="?attr/colorOnSurface">
          <path
              android:fillColor="@android:color/white"
              android:pathData="M10,20v-6h4v6h5v-8h3L12,3 2,12h3v8z"/>
        </vector>
        EOF
        
        cat > app/src/main/res/drawable/ic_local_movies.xml << 'EOF'
        <vector xmlns:android="http://schemas.android.com/apk/res/android"
            android:width="24dp"
            android:height="24dp"
            android:viewportWidth="24"
            android:viewportHeight="24"
            android:tint="?attr/colorOnSurface">
          <path
              android:fillColor="@android:color/white"
              android:pathData="M18,3v2h-2L16,3L8,3v2L6,5L6,3L4,3v18h2v-2h2v2h8v-2h2v2h2L20,3h-2zM8,17L6,17v-2h2v2zM8,13L6,13v-2h2v2zM8,9L6,9L6,7h2v2zM18,17h-2v-2h2v2zM18,13h-2v-2h2v2zM18,9h-2L16,7h2v2z"/>
        </vector>
        EOF
        
        cat > app/src/main/res/drawable/ic_featured_play_list.xml << 'EOF'
        <vector xmlns:android="http://schemas.android.com/apk/res/android"
            android:width="24dp"
            android:height="24dp"
            android:viewportWidth="24"
            android:viewportHeight="24"
            android:tint="?attr/colorOnSurface">
          <path
              android:fillColor="@android:color/white"
              android:pathData="M21,3L3,3c-1.1,0 -2,0.9 -2,2v14c0,1.1 0.9,2 2,2h18c1.1,0 2,-0.9 2,-2L23,5c0,-1.1 -0.9,-2 -2,-2zM21,19L3,19L3,5h18v14zM10,12L8,12v3L5,15v2h6v-2h-1v-3zM12,10h8v2h-8zM12,14h8v2h-8z"/>
        </vector>
        EOF
        
        cat > app/src/main/res/drawable/ic_playlist_play.xml << 'EOF'
        <vector xmlns:android="http://schemas.android.com/apk/res/android"
            android:width="24dp"
            android:height="24dp"
            android:viewportWidth="24"
            android:viewportHeight="24"
            android:tint="?attr/colorOnSurface">
          <path
              android:fillColor="@android:color/white"
              android:pathData="M4,10h12v2L4,12zM4,6h12v2L4,8zM4,14h8v2L4,16zM14,14v6l5,-3z"/>
        </vector>
        EOF
        
        cat > app/src/main/res/drawable/ic_settings.xml << 'EOF'
        <vector xmlns:android="http://schemas.android.com/apk/res/android"
            android:width="24dp"
            android:height="24dp"
            android:viewportWidth="24"
            android:viewportHeight="24"
            android:tint="?attr/colorOnSurface">
          <path
              android:fillColor="@android:color/white"
              android:pathData="M19.14,12.94c0.04,-0.3 0.06,-0.61 0.06,-0.94c0,-0.32 -0.02,-0.64 -0.07,-0.94l2.03,-1.58c0.18,-0.14 0.23,-0.41 0.12,-0.61l-1.92,-3.32c-0.12,-0.22 -0.37,-0.29 -0.59,-0.22l-2.39,0.96c-0.5,-0.38 -1.03,-0.7 -1.62,-0.94L14.4,2.81c-0.04,-0.24 -0.24,-0.41 -0.48,-0.41h-3.84c-0.24,0 -0.43,0.17 -0.47,0.41L9.25,5.35C8.66,5.59 8.12,5.92 7.63,6.29L5.24,5.33c-0.22,-0.08 -0.47,0 -0.59,0.22L2.74,8.87C2.62,9.08 2.66,9.34 2.86,9.48l2.03,1.58C4.84,11.36 4.8,11.69 4.8,12s0.02,0.64 0.07,0.94l-2.03,1.58c-0.18,0.14 -0.23,0.41 -0.12,0.61l1.92,3.32c0.12,0.22 0.37,0.29 0.59,0.22l2.39,-0.96c0.5,0.38 1.03,0.7 1.62,0.94l0.36,2.54c0.05,0.24 0.24,0.41 0.48,0.41h3.84c0.24,0 0.44,-0.17 0.47,-0.41l0.36,-2.54c0.59,-0.24 1.13,-0.56 1.62,-0.94l2.39,0.96c0.22,0.08 0.47,0 0.59,-0.22l1.92,-3.32c0.12,-0.22 0.07,-0.47 -0.12,-0.61L19.14,12.94zM12,15.6c-1.98,0 -3.6,-1.62 -3.6,-3.6s1.62,-3.6 3.6,-3.6s3.6,1.62 3.6,3.6S13.98,15.6 12,15.6z"/>
        </vector>
        EOF
        
        cat > app/src/main/res/drawable/ic_play_circle.xml << 'EOF'
        <vector xmlns:android="http://schemas.android.com/apk/res/android"
            android:width="24dp"
            android:height="24dp"
            android:viewportWidth="24"
            android:viewportHeight="24"
            android:tint="?attr/colorOnSurface">
          <path
              android:fillColor="@android:color/white"
              android:pathData="M12,2C6.48,2 2,6.48 2,12s4.48,10 10,10s10,-4.48 10,-10S17.52,2 12,2zM10,16.5v-9l6,4.5L10,16.5z"/>
        </vector>
        EOF
        
        cat > app/src/main/res/drawable/ic_play_arrow.xml << 'EOF'
        <vector xmlns:android="http://schemas.android.com/apk/res/android"
            android:width="24dp"
            android:height="24dp"
            android:viewportWidth="24"
            android:viewportHeight="24"
            android:tint="?attr/colorOnSurface">
          <path
              android:fillColor="@android:color/white"
              android:pathData="M8,5v14l11,-7z"/>
        </vector>
        EOF
        
        cat > app/src/main/res/drawable/ic_launcher_foreground.xml << 'EOF'
        <vector xmlns:android="http://schemas.android.com/apk/res/android"
            android:width="108dp"
            android:height="108dp"
            android:viewportWidth="108"
            android:viewportHeight="108">
          <group android:scaleX="0.7"
                 android:scaleY="0.7"
                 android:pivotX="54"
                 android:pivotY="54">
            <path
                android:fillColor="#FFFFFF"
                android:pathData="M36,54L72,36v36L36,54z"/>
            <circle
                android:fillColor="#00000000"
                android:strokeColor="#FFFFFF"
                android:strokeWidth="3"
                android:cx="54"
                android:cy="54"
                android:r="20"/>
          </group>
        </vector>
        EOF
        
    - name: Create menu and layout files
      run: |
        # Create menus
        cat > app/src/main/res/menu/main_menu.xml << 'EOF'
        <?xml version="1.0" encoding="utf-8"?>
        <menu xmlns:android="http://schemas.android.com/apk/res/android"
            xmlns:app="http://schemas.android.com/apk/res-auto">
            <item
                android:id="@+id/action_about"
                android:title="About"
                app:showAsAction="never" />
        </menu>
        EOF
        
        cat > app/src/main/res/menu/bottom_navigation.xml << 'EOF'
        <?xml version="1.0" encoding="utf-8"?>
        <menu xmlns:android="http://schemas.android.com/apk/res/android">
            <item
                android:id="@+id/nav_home"
                android:title="Home"
                android:icon="@drawable/ic_home" />
            <item
                android:id="@+id/nav_local"
                android:title="Local"
                android:icon="@drawable/ic_local_movies" />
            <item
                android:id="@+id/nav_sample"
                android:title="Sample Content"
                android:icon="@drawable/ic_featured_play_list" />
            <item
                android:id="@+id/nav_playlist"
                android:title="Playlist"
                android:icon="@drawable/ic_playlist_play" />
            <item
                android:id="@+id/nav_settings"
                android:title="Settings"
                android:icon="@drawable/ic_settings" />
        </menu>
        EOF
        
    - name: Create layout files
      run: |
        cat > app/src/main/res/layout/activity_main.xml << 'EOF'
        <?xml version="1.0" encoding="utf-8"?>
        <androidx.coordinatorlayout.widget.CoordinatorLayout xmlns:android="http://schemas.android.com/apk/res/android"
            xmlns:app="http://schemas.android.com/apk/res-auto"
            xmlns:tools="http://schemas.android.com/tools"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:background="@color/background_dark"
            tools:context=".MainActivity">

            <com.google.android.material.appbar.AppBarLayout
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:theme="@style/ThemeOverlay.MaterialComponents.Dark.ActionBar">

                <com.google.android.material.appbar.MaterialToolbar
                    android:id="@+id/toolbar"
                    android:layout_width="match_parent"
                    android:layout_height="?attr/actionBarSize"
                    android:background="@color/primary_dark"
                    app:title="@string/app_name"
                    app:titleTextColor="@android:color/white"
                    app:menu="@menu/main_menu" />

            </com.google.android.material.appbar.AppBarLayout>

            <LinearLayout
                android:layout_width="match_parent"
                android:layout_height="match_parent"
                android:orientation="vertical"
                app:layout_behavior="@string/appbar_scrolling_view_behavior">

                <androidx.core.widget.NestedScrollView
                    android:id="@+id/inputScrollView"
                    android:layout_width="match_parent"
                    android:layout_height="0dp"
                    android:layout_weight="1"
                    android:background="@color/surface_dark">

                    <LinearLayout
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        android:orientation="vertical"
                        android:padding="16dp">

                        <com.google.android.material.textfield.TextInputLayout
                            android:layout_width="match_parent"
                            android:layout_height="wrap_content"
                            android:hint="Media Stream URL"
                            app:boxBackgroundColor="@color/input_background"
                            app:boxBackgroundMode="filled"
                            app:endIconMode="clear_text"
                            app:hintTextColor="@color/hint_text">

                            <com.google.android.material.textfield.TextInputEditText
                                android:id="@+id/urlInput"
                                android:layout_width="match_parent"
                                android:layout_height="wrap_content"
                                android:inputType="textUri"
                                android:textColor="@android:color/white"
                                android:textColorHint="@color/hint_text"
                                android:maxLines="3"
                                android:scrollbars="vertical" />
                        </com.google.android.material.textfield.TextInputLayout>

                        <com.google.android.material.button.MaterialButton
                            android:id="@+id/playButton"
                            android:layout_width="match_parent"
                            android:layout_height="56dp"
                            android:layout_marginTop="20dp"
                            android:text="▶ PLAY STREAM"
                            android:textSize="16sp"
                            android:textStyle="bold"
                            app:icon="@drawable/ic_play_circle"
                            app:iconGravity="textStart"
                            app:iconSize="24dp"
                            style="@style/Widget.MaterialComponents.Button" />

                    </LinearLayout>

                </androidx.core.widget.NestedScrollView>

                <com.google.android.material.bottomnavigation.BottomNavigationView
                    android:id="@+id/bottomNavigation"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:background="@color/surface_dark"
                    app:itemIconTint="@color/bottom_nav_selector"
                    app:itemTextColor="@color/bottom_nav_selector"
                    app:menu="@menu/bottom_navigation" />

            </LinearLayout>

            <com.google.android.material.floatingactionbutton.FloatingActionButton
                android:id="@+id/fab"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_gravity="bottom|end"
                android:layout_margin="16dp"
                android:src="@drawable/ic_play_arrow"
                app:backgroundTint="@color/accent_color"
                app:tint="@android:color/white" />

        </androidx.coordinatorlayout.widget.CoordinatorLayout>
        EOF
        
    - name: Create XML files and launcher icon
      run: |
        # Create XML files
        cat > app/src/main/res/xml/data_extraction_rules.xml << 'EOF'
        <?xml version="1.0" encoding="utf-8"?>
        <data-extraction-rules>
            <cloud-backup>
                <include domain="file" path="."/>
            </cloud-backup>
            <device-transfer>
                <include domain="file" path="."/>
            </device-transfer>
        </data-extraction-rules>
        EOF
        
        cat > app/src/main/res/xml/backup_rules.xml << 'EOF'
        <?xml version="1.0" encoding="utf-8"?>
        <full-backup-content>
        </full-backup-content>
        EOF
        
        cat > app/src/main/res/xml/network_security_config.xml << 'EOF'
        <?xml version="1.0" encoding="utf-8"?>
        <network-security-config>
            <domain-config cleartextTrafficPermitted="true">
                <domain includeSubdomains="true">localhost</domain>
                <domain includeSubdomains="true">192.168.1.1</domain>
                <domain includeSubdomains="true">10.0.2.2</domain>
                <domain includeSubdomains="true">127.0.0.1</domain>
            </domain-config>
            <base-config cleartextTrafficPermitted="true">
                <trust-anchors>
                    <certificates src="system"/>
                </trust-anchors>
            </base-config>
        </network-security-config>
        EOF
        
        # Create launcher icon
        cat > app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml << 'EOF'
        <?xml version="1.0" encoding="utf-8"?>
        <adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
            <background android:drawable="@color/ic_launcher_background"/>
            <foreground android:drawable="@drawable/ic_launcher_foreground"/>
        </adaptive-icon>
        EOF
        
    - name: Create minimal source files
      run: |
        # Create NYPlayerApplication.kt
        cat > app/src/main/java/com/nyplayer/NYPlayerApplication.kt << 'EOF'
        package com.nyplayer

        import android.app.Application

        class NYPlayerApplication : Application() {
            override fun onCreate() {
                super.onCreate()
            }
        }
        EOF
        
        # Create MainActivity.kt
        cat > app/src/main/java/com/nyplayer/MainActivity.kt << 'EOF'
        package com.nyplayer

        import android.os.Bundle
        import androidx.appcompat.app.AppCompatActivity

        class MainActivity : AppCompatActivity() {
            override fun onCreate(savedInstanceState: Bundle?) {
                super.onCreate(savedInstanceState)
                setContentView(R.layout.activity_main)
            }
        }
        EOF
        
        # Create PlayerActivity.kt
        cat > app/src/main/java/com/nyplayer/ui/PlayerActivity.kt << 'EOF'
        package com.nyplayer.ui

        import android.os.Bundle
        import androidx.appcompat.app.AppCompatActivity
        import com.nyplayer.R

        class PlayerActivity : AppCompatActivity() {
            override fun onCreate(savedInstanceState: Bundle?) {
                super.onCreate(savedInstanceState)
                setContentView(R.layout.activity_player)
            }
        }
        EOF
        
        # Create basic player layout
        cat > app/src/main/res/layout/activity_player.xml << 'EOF'
        <?xml version="1.0" encoding="utf-8"?>
        <FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:background="@android:color/black">
            
            <TextView
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_gravity="center"
                android:text="Player View"
                android:textColor="@android:color/white"
                android:textSize="18sp" />
                
        </FrameLayout>
        EOF
        
        # Create ProGuard rules
        cat > app/proguard-rules.pro << 'EOF'
        # Add project specific ProGuard rules here.
        -keep class androidx.** { *; }
        -keep class com.google.android.material.** { *; }
        -keep class com.google.android.exoplayer2.** { *; }
        -dontwarn com.google.android.exoplayer2.**
        EOF
        
    - name: Make gradlew executable
      run: |
        # Create gradlew wrapper files
        cat > gradlew << 'EOF'
        #!/usr/bin/env sh
        
        ##############################################################################
        ##
        ##  Gradle start up script for UN*X
        ##
        ##############################################################################
        
        # Resolve links: $0 may be a link
        PRG="$0"
        # Need this for relative symlinks.
        while [ -h "$PRG" ] ; do
            ls=`ls -ld "$PRG"`
            link=`expr "$ls" : '.*-> \(.*\)$'`
            if expr "$link" : '/.*' > /dev/null; then
                PRG="$link"
            else
                PRG=`dirname "$PRG"`"/$link"
            fi
        done
        SAVED="`pwd`"
        cd "`dirname \"$PRG\"`/" >/dev/null
        APP_HOME="`pwd -P`"
        cd "$SAVED" >/dev/null
        
        APP_NAME="Gradle"
        APP_BASE_NAME=`basename "$0"`
        
        # Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
        DEFAULT_JVM_OPTS='"-Xmx64m" "-Xms64m"'
        
        # Use the maximum available, or set MAX_FD != -1 to use that value.
        MAX_FD="maximum"
        
        warn () {
            echo "$*"
        }
        
        die () {
            echo
            echo "$*"
            echo
            exit 1
        }
        
        # OS specific support (must be 'true' or 'false').
        cygwin=false
        msys=false
        darwin=false
        nonstop=false
        case "`uname`" in
          CYGWIN* )
            cygwin=true
            ;;
          Darwin* )
            darwin=true
            ;;
          MINGW* )
            msys=true
            ;;
          NONSTOP* )
            nonstop=true
            ;;
        esac
        
        CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar
        
        # Determine the Java command to use to start the JVM.
        if [ -n "$JAVA_HOME" ] ; then
            if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
                # IBM's JDK on AIX uses strange locations for the executables
                JAVACMD="$JAVA_HOME/jre/sh/java"
            else
                JAVACMD="$JAVA_HOME/bin/java"
            fi
            if [ ! -x "$JAVACMD" ] ; then
                die "ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME
        
        Please set the JAVA_HOME variable in your environment to match the
        location of your Java installation."
            fi
        else
            JAVACMD="java"
            which java >/dev/null 2>&1 || die "ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
        
        Please set the JAVA_HOME variable in your environment to match the
        location of your Java installation."
        fi
        
        # Increase the maximum file descriptors if we can.
        if [ "$cygwin" = "false" -a "$darwin" = "false" -a "$nonstop" = "false" ] ; then
            MAX_FD_LIMIT=`ulimit -H -n`
            if [ $? -eq 0 ] ; then
                if [ "$MAX_FD" = "maximum" -o "$MAX_FD" = "max" ] ; then
                    MAX_FD="$MAX_FD_LIMIT"
                fi
                ulimit -n $MAX_FD
                if [ $? -ne 0 ] ; then
                    warn "Could not set maximum file descriptor limit: $MAX_FD"
                fi
            else
                warn "Could not query maximum file descriptor limit: $MAX_FD_LIMIT"
            fi
        fi
        
        # For Darwin, add options to specify how the application appears in the dock
        if [ "$darwin" = "true" ]; then
            GRADLE_OPTS="$GRADLE_OPTS \"-Xdock:name=$APP_NAME\" \"-Xdock:icon=$APP_HOME/media/gradle.icns\""
        fi
        
        # For Cygwin or MSYS, switch paths to Windows format before running java
        if [ "$cygwin" = "true" -o "$msys" = "true" ] ; then
            APP_HOME=`cygpath --path --mixed "$APP_HOME"`
            CLASSPATH=`cygpath --path --mixed "$CLASSPATH"`
            
            JAVACMD=`cygpath --unix "$JAVACMD"`
        
            # We build the pattern for arguments to be converted via cygpath
            ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`
            SEP=""
            for dir in $ROOTDIRSRAW ; do
                ROOTDIRS="$ROOTDIRS$SEP$dir"
                SEP="|"
            done
            OURCYGPATTERN="(^($ROOTDIRS))"
            # Add a user-defined pattern to the cygpath arguments
            if [ "$GRADLE_CYGPATTERN" != "" ] ; then
                OURCYGPATTERN="$OURCYGPATTERN|($GRADLE_CYGPATTERN)"
            fi
            # Now convert the arguments - kludge to limit ourselves to /bin/sh
            i=0
            for arg in "$@" ; do
                CHECK=`echo "$arg"|egrep -c "$OURCYGPATTERN" -`
                CHECK2=`echo "$arg"|egrep -c "^-"`                                 ### Determine if an option
        
                if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition
                    eval `echo args$i`=`cygpath --path --ignore --mixed "$arg"`
                else
                    eval `echo args$i`="\"$arg\""
                fi
                i=`expr $i + 1`
            done
            case $i in
                0) set -- ;;
                1) set -- "$args0" ;;
                2) set -- "$args0" "$args1" ;;
                3) set -- "$args0" "$args1" "$args2" ;;
                4) set -- "$args0" "$args1" "$args2" "$args3" ;;
                5) set -- "$args0" "$args1" "$args2" "$args3" "$args4" ;;
                6) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" ;;
                7) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" ;;
                8) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" "$args7" ;;
                9) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" "$args7" "$args8" ;;
            esac
        fi
        
        # Escape application args
        save () {
            for i do printf %s\\n "$i" | sed "s/'/'\\\\''/g;1s/^/'/;\$s/\$/' \\\\/" ; done
            echo " "
        }
        APP_ARGS=`save "$@"`
        
        # Collect all arguments for the java command, following the shell quoting and substitution rules
        eval set -- $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS "\"-Dprop=$APP_ARGS\"" -classpath "\"$CLASSPATH\"" org.gradle.wrapper.GradleWrapperMain "$APP_ARGS"
        
        exec "$JAVACMD" "$@"
        EOF
        chmod +x gradlew
        
    - name: Create gradle wrapper JAR
      run: |
        # Download gradle wrapper jar
        mkdir -p gradle/wrapper
        curl -L -o gradle/wrapper/gradle-wrapper.jar https://github.com/gradle/gradle/raw/v8.4.0/gradle/wrapper/gradle-wrapper.jar
        
    - name: Build debug APK
      run: ./gradlew assembleDebug --stacktrace
      
    - name: Build release APK
      run: ./gradlew assembleRelease --stacktrace
      
    - name: Upload debug APK
      uses: actions/upload-artifact@v4
      with:
        name: NY Player Debug APK
        path: app/build/outputs/apk/debug/*.apk
        
    - name: Upload release APK
      uses: actions/upload-artifact@v4
      with:
        name: NY Player Release APK
        path: app/build/outputs/apk/release/*.apk
