name: NY Player Android Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Accept Android SDK licenses
      run: yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --licenses
      
    - name: Install Android SDK components
      run: |
        $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager "platforms;android-34"
        $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager "build-tools;34.0.0"
        $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager "platform-tools"
        
    - name: Create Android project structure
      run: |
        mkdir -p app/src/main/java/com/nyplayer/app
        mkdir -p app/src/main/res/layout
        mkdir -p app/src/main/res/values
        mkdir -p app/src/main/res/mipmap-anydpi-v26
        mkdir -p gradle/wrapper
        
    - name: Create settings.gradle
      run: |
        cat > settings.gradle << 'EOF'
        pluginManagement {
            repositories {
                google()
                mavenCentral()
                gradlePluginPortal()
            }
        }
        dependencyResolutionManagement {
            repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
            repositories {
                google()
                mavenCentral()
            }
        }
        
        rootProject.name = "NY Player"
        include ':app'
        EOF
        
    - name: Create root build.gradle
      run: |
        cat > build.gradle << 'EOF'
        plugins {
            id 'com.android.application' version '8.1.2' apply false
            id 'org.jetbrains.kotlin.android' version '1.8.20' apply false
        }
        EOF
        
    - name: Create gradle.properties
      run: |
        cat > gradle.properties << 'EOF'
        org.gradle.jvmargs=-Xmx2048m -Dfile.encoding=UTF-8
        android.useAndroidX=true
        android.enableJetifier=true
        kotlin.code.style=official
        android.nonTransitiveRClass=false
        EOF
        
    - name: Create gradle wrapper properties
      run: |
        mkdir -p gradle/wrapper
        cat > gradle/wrapper/gradle-wrapper.properties << 'EOF'
        distributionBase=GRADLE_USER_HOME
        distributionPath=wrapper/dists
        distributionUrl=https\://services.gradle.org/distributions/gradle-8.3-bin.zip
        zipStoreBase=GRADLE_USER_HOME
        zipStorePath=wrapper/dists
        EOF
        
    - name: Create app build.gradle
      run: |
        cat > app/build.gradle << 'EOF'
        plugins {
            id 'com.android.application'
            id 'org.jetbrains.kotlin.android'
        }
        
        android {
            namespace 'com.nyplayer.app'
            compileSdk 34
            
            defaultConfig {
                applicationId "com.nyplayer.app"
                minSdk 21
                targetSdk 34
                versionCode 1
                versionName "1.0"
                
                testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
            }
            
            buildTypes {
                release {
                    minifyEnabled false
                    proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
                }
            }
            
            compileOptions {
                sourceCompatibility JavaVersion.VERSION_1_8
                targetCompatibility JavaVersion.VERSION_1_8
            }
            
            kotlinOptions {
                jvmTarget = '1.8'
            }
            
            buildFeatures {
                viewBinding true
            }
        }
        
        dependencies {
            implementation 'androidx.core:core-ktx:1.12.0'
            implementation 'androidx.appcompat:appcompat:1.6.1'
            implementation 'com.google.android.material:material:1.10.0'
            implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
            implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.7.0'
            
            // ExoPlayer dependencies
            implementation 'androidx.media3:media3-exoplayer:1.1.1'
            implementation 'androidx.media3:media3-exoplayer-dash:1.1.1'
            implementation 'androidx.media3:media3-exoplayer-hls:1.1.1'
            implementation 'androidx.media3:media3-exoplayer-smoothstreaming:1.1.1'
            implementation 'androidx.media3:media3-exoplayer-rtsp:1.1.1'
            implementation 'androidx.media3:media3-ui:1.1.1'
            implementation 'androidx.media3:media3-common:1.1.1'
            
            testImplementation 'junit:junit:4.13.2'
            androidTestImplementation 'androidx.test.ext:junit:1.1.5'
            androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
        }
        EOF
        
    - name: Create AndroidManifest.xml
      run: |
        cat > app/src/main/AndroidManifest.xml << 'EOF'
        <?xml version="1.0" encoding="utf-8"?>
        <manifest xmlns:android="http://schemas.android.com/apk/res/android"
            xmlns:tools="http://schemas.android.com/tools">
            
            <uses-permission android:name="android.permission.INTERNET" />
            <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
            
            <application
                android:allowBackup="true"
                android:dataExtractionRules="@xml/data_extraction_rules"
                android:fullBackupContent="@xml/backup_rules"
                android:icon="@mipmap/ic_launcher"
                android:label="@string/app_name"
                android:roundIcon="@mipmap/ic_launcher_round"
                android:theme="@style/Theme.AppCompat.Light.DarkActionBar"
                tools:targetApi="31">
                
                <activity
                    android:name=".MainActivity"
                    android:exported="true"
                    android:launchMode="singleTop">
                    <intent-filter>
                        <action android:name="android.intent.action.MAIN" />
                        <category android:name="android.intent.category.LAUNCHER" />
                    </intent-filter>
                    
                    <intent-filter>
                        <action android:name="android.intent.action.VIEW" />
                        <category android:name="android.intent.category.DEFAULT" />
                        <category android:name="android.intent.category.BROWSABLE" />
                        <data android:scheme="http" />
                        <data android:scheme="https" />
                    </intent-filter>
                    
                    <intent-filter>
                        <action android:name="android.intent.action.VIEW" />
                        <category android:name="android.intent.category.DEFAULT" />
                        <data android:mimeType="video/*" />
                        <data android:mimeType="audio/*" />
                    </intent-filter>
                </activity>
            </application>
        </manifest>
        EOF
        
    - name: Create activity_main.xml layout
      run: |
        cat > app/src/main/res/layout/activity_main.xml << 'EOF'
        <?xml version="1.0" encoding="utf-8"?>
        <androidx.constraintlayout.widget.ConstraintLayout
            xmlns:android="http://schemas.android.com/apk/res/android"
            xmlns:app="http://schemas.android.com/apk/res-auto"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:background="@android:color/black">
            
            <androidx.media3.ui.PlayerView
                android:id="@+id/playerView"
                android:layout_width="match_parent"
                android:layout_height="match_parent"
                app:layout_constraintTop_toTopOf="parent"
                app:layout_constraintBottom_toBottomOf="parent"
                app:layout_constraintStart_toStartOf="parent"
                app:layout_constraintEnd_toEndOf="parent"
                app:show_buffering="when_playing"
                app:resize_mode="fit"
                app:use_controller="true" />
                
        </androidx.constraintlayout.widget.ConstraintLayout>
        EOF
        
    - name: Create strings.xml
      run: |
        cat > app/src/main/res/values/strings.xml << 'EOF'
        <resources>
            <string name="app_name">NY Player</string>
            <string name="credit">Credit: NY Player</string>
        </resources>
        EOF
        
    - name: Create MainActivity.kt
      run: |
        cat > app/src/main/java/com/nyplayer/app/MainActivity.kt << 'EOF'
        package com.nyplayer.app
        
        import android.net.Uri
        import android.os.Bundle
        import androidx.appcompat.app.AppCompatActivity
        import androidx.media3.common.MediaItem
        import androidx.media3.common.util.UnstableApi
        import androidx.media3.exoplayer.ExoPlayer
        import androidx.media3.ui.PlayerView
        
        @UnstableApi
        class MainActivity : AppCompatActivity() {
        
            private var player: ExoPlayer? = null
            private lateinit var playerView: PlayerView
        
            override fun onCreate(savedInstanceState: Bundle?) {
                super.onCreate(savedInstanceState)
                setContentView(R.layout.activity_main)
                
                playerView = findViewById(R.id.playerView)
            }
        
            override fun onStart() {
                super.onStart()
                initializePlayer()
            }
        
            override fun onStop() {
                super.onStop()
                releasePlayer()
            }
        
            private fun initializePlayer() {
                if (player == null) {
                    player = ExoPlayer.Builder(this).build()
                    playerView.player = player
                    
                    val videoUri = getVideoUri()
                    val mediaItem = MediaItem.fromUri(videoUri)
                    player?.setMediaItem(mediaItem)
                    player?.prepare()
                    player?.playWhenReady = true
                }
            }
        
            private fun getVideoUri(): Uri {
                // Check for intent data (video from external app)
                intent.data?.let { uri ->
                    return uri
                }
                
                // Check for intent extras
                intent.getStringExtra("video_url")?.let { url ->
                    return Uri.parse(url)
                }
                
                // Fallback to sample video
                return Uri.parse("https://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4")
            }
        
            private fun releasePlayer() {
                player?.let {
                    it.release()
                    player = null
                }
            }
        
            override fun onDestroy() {
                super.onDestroy()
                releasePlayer()
            }
        }
        EOF
        
    - name: Create launcher icon
      run: |
        cat > app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml << 'EOF'
        <?xml version="1.0" encoding="utf-8"?>
        <adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
            <background android:drawable="@android:color/white"/>
            <foreground android:drawable="@android:drawable/sym_def_app_icon"/>
        </adaptive-icon>
        EOF
        
        cat > app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml << 'EOF'
        <?xml version="1.0" encoding="utf-8"?>
        <adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
            <background android:drawable="@android:color/white"/>
            <foreground android:drawable="@android:drawable/sym_def_app_icon"/>
        </adaptive-icon>
        EOF
        
    - name: Create proguard-rules.pro
      run: |
        cat > app/proguard-rules.pro << 'EOF'
        # Add project specific ProGuard rules here.
        
        # Keep ExoPlayer classes
        -keep class androidx.media3.** { *; }
        -dontwarn androidx.media3.**
        
        # Keep application class
        -keep class com.nyplayer.app.** { *; }
        
        # General Android rules
        -keepattributes *Annotation*
        -keepattributes Signature
        -keepattributes InnerClasses
        -keepattributes EnclosingMethod
        
        # Keep native methods
        -keepclasseswithmembernames class * {
            native <methods>;
        }
        
        # Keep view constructors
        -keepclasseswithmembers class * {
            public <init>(android.content.Context, android.util.AttributeSet);
        }
        
        -keepclasseswithmembers class * {
            public <init>(android.content.Context, android.util.AttributeSet, int);
        }
        EOF
        
    - name: Create missing XML files
      run: |
        mkdir -p app/src/main/res/xml
        cat > app/src/main/res/xml/backup_rules.xml << 'EOF'
        <?xml version="1.0" encoding="utf-8"?>
        <full-backup-content>
        </full-backup-content>
        EOF
        
        cat > app/src/main/res/xml/data_extraction_rules.xml << 'EOF'
        <?xml version="1.0" encoding="utf-8"?>
        <data-extraction-rules>
            <cloud-backup>
                <include domain="file" path="."/>
            </cloud-backup>
            <device-transfer>
                <include domain="file" path="."/>
            </device-transfer>
        </data-extraction-rules>
        EOF
        
    - name: Download and setup Gradle Wrapper
      run: |
        curl -L https://services.gradle.org/distributions/gradle-8.3-bin.zip -o gradle-8.3-bin.zip
        unzip gradle-8.3-bin.zip
        gradle-8.3/bin/gradle wrapper --gradle-version 8.3
        chmod +x gradlew
        
    - name: Build APK
      run: ./gradlew assembleDebug
      
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: NY-Player-APK
        path: app/build/outputs/apk/debug/app-debug.apk
        retention-days: 30
